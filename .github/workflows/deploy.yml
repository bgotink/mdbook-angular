name: Deploy
on:
  release:
    types: [created]

permissions:
  contents: write

defaults:
  run:
    shell: bash

jobs:
  release_binaries:
    name: Deploy Release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        target:
          - aarch64-unknown-linux-musl
          - x86_64-unknown-linux-gnu
          - x86_64-unknown-linux-musl
          - aarch64-apple-darwin
          - x86_64-apple-darwin
          - x86_64-pc-windows-msvc
        include:
          - target: aarch64-unknown-linux-musl
            os: ubuntu-latest
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: x86_64-unknown-linux-musl
            os: ubuntu-latest
          - target: x86_64-apple-darwin
            os: macos-latest
          # - target: aarch64-apple-darwin
          #   os: macos-latest
          - target: x86_64-pc-windows-msvc
            os: windows-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust
        run: scripts/ci/install-rust.sh stable ${{ matrix.target }}
      - name: Build asset
        run: scripts/ci/make-release-asset.sh ${{ matrix.os }} ${{ matrix.target }}
      - name: Update release with new asset
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release upload $MDBOOK_ANGULAR_TAG $MDBOOK_ANGULAR_ASSET
  publish_crate:
    name: Publish to crates.io
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust (rustup)
        run: rustup update stable --no-self-update && rustup default stable
      - name: Publish
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        run: cargo publish --no-verify
